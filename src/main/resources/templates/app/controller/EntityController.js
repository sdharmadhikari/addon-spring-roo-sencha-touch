/*
 * File: app/controller/${entity.name}Controller.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('${app.name}.controller.${entity.name}Controller', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            ${entity.lowerCase}NavigationView: {
                autoCreate: true,
                selector: 'navigationview#${entity.lowerCase}NavigationView',
                xtype: '${entity.lowerCase}NavigationView'
            },
            ${entity.lowerCase}FormPanel: {
                autoCreate: true,
                selector: 'formpanel#${entity.lowerCase}FormPanel',
                xtype: '${entity.lowerCase}FormPanel'
            },
            ${entity.lowerCase}List: {
                autoCreate: true,
                selector: 'list#${entity.lowerCase}List',
                xtype: '${entity.lowerCase}List'
            },
            ${entity.lowerCase}RefreshButton: 'button#${entity.lowerCase}RefreshButton',
            ${entity.lowerCase}AddButton: 'button#${entity.lowerCase}AddButton'
        },

        control: {
            "button#${entity.lowerCase}RefreshButton": {
                tap: 'on${entity.name}RefreshButtonTap'
            },
            "button#${entity.lowerCase}AddButton": {
                tap: 'on${entity.name}AddButtonTap'
            },
            "button#${entity.lowerCase}SaveButton": {
                tap: 'on${entity.name}AddSaveButtonTap'
            },
            "list#${entity.lowerCase}List": {
                itemtap: 'on${entity.name}ListItemTap'
            },
            "button#${entity.lowerCase}DeleteButton": {
                tap: 'on${entity.name}DeleteButtonTap'
            },
            "navigationview#${entity.lowerCase}NavigationView": {
                activeitemchange: 'on${entity.name}NavigationViewActiveItemChange'
            }
        }
    },

    on${entity.name}RefreshButtonTap: function(button, e, eOpts) {
        var ${entity.lowerCase}JsonPStore = Ext.getStore('${entity.name}JsonPStore');


        ${entity.lowerCase}JsonPStore.load();
    },

    on${entity.name}AddButtonTap: function(button, e, eOpts) {
        // Get References
        var ${entity.lowerCase}NavigationView = this.get${entity.name}NavigationView();
        var ${entity.lowerCase}FormPanel = this.get${entity.name}FormPanel();


        // Application Logic
        var record = Ext.create('${app.name}.model.${entity.name}');
        record.set('attrName','sudhir');
        ${entity.lowerCase}FormPanel.setRecord(record);

        ${entity.lowerCase}NavigationView.push(${entity.lowerCase}FormPanel);


    },

    on${entity.name}AddSaveButtonTap: function(button, e, eOpts) {
        // Get References

        var ${entity.lowerCase}NavigationView = this.get${entity.name}NavigationView();
        var ${entity.lowerCase}FormPanel = this.get${entity.name}FormPanel();
        var ${entity.lowerCase}List = this.get${entity.name}List();
        var ${entity.lowerCase}JsonPStore = Ext.getStore('${entity.name}JsonPStore');

        var ${entity.lowerCase} = ${entity.lowerCase}FormPanel.getRecord();

        ${entity.lowerCase}FormPanel.updateRecord(${entity.lowerCase});

        var operation = {};
        //operation.success = this.${entity.lowerCase}Save;
        operation.failure = function() {
            Ext.Msg.alert(${app.name}.app.getGenericServerMessage(),'',Ext.emptyFn);
            return;};
        if (isNaN(${entity.lowerCase}.get('id'))) { // In case of new entity, Sencha uses something like ext-* which is not a number
            ${entity.lowerCase}.set('id',0);// 0 Represents dummy id, otherwise
            //string like ext-* fails on Roo server
            //side because its not integer.
        }
        ${entity.lowerCase}.save(operation);


        ${entity.lowerCase}NavigationView.pop();
    },

    on${entity.name}ListItemTap: function(dataview, index, target, record, e, eOpts) {
        var ${entity.lowerCase}NavigationView = this.get${entity.name}NavigationView();
        var ${entity.lowerCase}FormPanel = this.get${entity.name}FormPanel();

        ${entity.lowerCase}FormPanel.setRecord(record);
        ${entity.lowerCase}NavigationView.push(${entity.lowerCase}FormPanel);

    },

    on${entity.name}DeleteButtonTap: function(button, e, eOpts) {
        var ${entity.lowerCase}NavigationView = this.get${entity.name}NavigationView();
        var ${entity.lowerCase}FormPanel = this.get${entity.name}FormPanel();
        var ${entity.lowerCase}List = this.get${entity.name}List();
        var ${entity.lowerCase}JsonPStore = Ext.getStore('${entity.name}JsonPStore');

        var ${entity.lowerCase} = ${entity.lowerCase}FormPanel.getRecord();


        var operation = {};

        operation.failure = function() {
            Ext.Msg.alert(${app.name}.app.getGenericServerMessage(),'',Ext.emptyFn);
            return;};


        Ext.Msg.confirm('', 'Delete?', function(buttonId,value,opt) {

            if(buttonId === 'no') {

                return;

            }else{

                ${entity.lowerCase}JsonPStore.remove(${entity.lowerCase});
                ${entity.lowerCase}.erase(operation);

                ${entity.lowerCase}NavigationView.pop();

            }
        });


    },

    on${entity.name}NavigationViewActiveItemChange: function(container, value, oldValue, eOpts) {


        if(value.xtype == '${entity.lowerCase}List') {

           this.get${entity.name}RefreshButton().show();
           this.get${entity.name}AddButton().show();

        }
        if(value.xtype == '${entity.lowerCase}FormPanel') {

            this.get${entity.name}RefreshButton().hide();
            this.get${entity.name}AddButton().hide();

        }

    }

});
